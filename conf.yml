################ SAMPLE VIFI USER CONFIGURATION FILE ###################
#TODO: Currently, this file is created manually. In the future, a function can be used to generate this file \
# to generate some parameters appropriately (e.g., service name can be unique for this user)

userid: ast_user_1    # User name should be a universal unique name (e.g., the username at institution)
ser_name: ser1             # Request (e.g., service) name. Should be unique all over VIFI system (e.g., username<UUID>)
dependencies:              # List of depenedcies (i.e., preceeding services) for current service. #TODO: Currently, there is no implementation for precedence features
 files:                    # Lisf of files that should exist for current service to run including the @script
 - ast_crts_server.py
 - crts_output.csv
 ser:                      # List of preceeding services that should exist (or completed) before current service can run
 fn:                       # TODO: List of functions that define 'precedence'
script: ast_crts_server.py # The user script to run inside created service. Each service has, at most, one script. If the user needs to run multiple files, then these files should be combined into a single script
image: "shambakey1/ocw"    # The image (e.g., docker image). Each service has only one image
cmd_eng: python            # Command to run user's script
args:                      # Arguments to be passed for user's script
tasks: 1                   # Required number of tasks for the created service
data:                      # Required data for the service
 crts:                     # 'key' is the data 'key' as retrived by data management layer
  container_data_path: "/crts_data" # Data path insided the created service (e.g., data path inside docker container)
  options:                 # Options like requesting data mounting in write mode in the created service
container_dir: '/home'     # Path to map required user's files into container (i.e., the created 'request' folder for this user will be mapped to the value of this parameter)
work_dir: '/home'          # Work directory inside container
envs:                      # List of user specified environment variables (in the form key=val) to be used within the containerized application
mnts:                      # List of user specified mounts (in the form source:target:options) to be used within the containerized application
results:                   # List of result files of the service
- crts_features.csv
ser_check_thr: 300         # Service check threshold (ttl) to check service completness
s3:                        # This section for S3 bucket transfer of specified results
  transfer: True
  bucket: uncc-vifi-bucket
  path: ast
